name: Fv-Apps
on:
  push:
    branches:
      - main
    tags:
      - 'r-*'
  pull_request:
    branches:
      - main
jobs:
  test:
    environment: prod
    name: Unit Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Start server in background
      run: npm run start & sleep 10
    # - name: Run Playwright tests
    #   run: npx playwright test
    - name: Set variables
      run: |
        rm -rf .env
        touch .env
        ls -a
        printf "%s\n" "REACT_APP_VERSION_NUMBER=\"${{vars.REACT_APP_VERSION_NUMBER}}\"" >> .env 
        printf "%s\n" "REACT_APP_ABOUT_APP_NAME=\"${{vars.REACT_APP_ABOUT_APP_NAME}}\"" >> .env
        printf "%s\n" "REACT_APP_ABOUT_ORG_NAME=\"${{vars.REACT_APP_ABOUT_ORG_NAME}}\"" >> .env
        printf "%s\n" "REACT_APP_BASE_HOST=\"${{vars.REACT_APP_BASE_HOST}}\"" >> .env
        printf "%s\n" "REACT_APP_BASE_API_URL=\"${{vars.REACT_APP_BASE_API_URL}}\"" >> .env
        touch modules/prod.auto.tfvars
        printf "%s\n" "aws_profile = \"default\"" >> modules/prod.auto.tfvars 
        printf "%s\n" "domain = \"${{vars.DOMAIN}}\"" >> modules/prod.auto.tfvars 
        printf "%s\n" "application_name = \"${{vars.APPLICATION_NAME}}\"" >> modules/prod.auto.tfvars 
        printf "%s\n" "website_path  = \"${{vars.WEBSITE_PATH}}\"" >> modules/prod.auto.tfvars 
        printf "%s\n" "subdomains = ${{vars.SUBDOMAINS}}" >> modules/prod.auto.tfvars 
        printf "%s\n" "default_root_index_file = \"index.html\"" >> modules/prod.auto.tfvars
        printf "%s\n" "env_name = \"${{vars.ENV_NAME}}\"" >> modules/prod.auto.tfvars  
    - name: Build Application
      run: |
        ls
        npm run build
        mkdir uploads 
        mv modules/prod.auto.tfvars uploads/prod.auto.tfvars
        mv build uploads/build
    - name: Run Tests
      run: npm test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: uploads
        path: uploads/
    - run: ls ;cd modules; ls; 
  inspect_changes:
    environment: prod
    name: Inspect Infra Changes
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: uploads
          path: downloads/
      - name: Check directory files
        run: |
         ls
         mv downloads/* modules/
         cd modules
         cd build
         ls
         cd ../..
      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
        run: |
         ls
         cd modules
         ls
         terraform init -lock=false
         terraform fmt
         terraform plan
  update_infra_changes:
    environment: prod
    name: Update Infra and App Changes
    runs-on: ubuntu-latest
    needs: inspect_changes
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: uploads
          path: downloads/
      - name: Check directory files
        run: |
         ls
         mv downloads/* modules/
         cd modules
         ls
         cd build
         ls
         cd ../..
      - name: Terraform plan and apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
        run: |
          cd modules
          terraform init -lock=false
          terraform fmt
          terraform plan
#          terraform apply -auto-approve -lock=false
