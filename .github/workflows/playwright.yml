name: Fv-Apps
on:
  push:
    branches: [ main, develop, infra_tfe ]
  pull_request:
    branches: [ main, develop ]
jobs:
  test:
    name: Unit Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Start server in background
      run: npm run start & sleep 10
    # - name: Run Playwright tests
    #   run: npx playwright test
    - name: Run Unit tests
      run: npm run test;  npm run build;mkdir uploads; mv build uploads/build
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: uploads
        path: uploads/
    - run: ls ;cd modules; ls; 
  inspect_changes:
    name: Inspect Infra Changes
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: uploads
          path: downloads/
      - name: Check directory files
        run: |
          ls;
          mv downloads/build
          modules/build
          cd modules
          ls
          cd build
          ls
          cd ../..
      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: cd modules; terraform init -lock=false; terraform fmt; terraform plan
  update_infra_changes:
    name: Update Infra and App Changes
    runs-on: ubuntu-latest
    needs: inspect_changes
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: uploads
          path: downloads/
      - name: Check directory files
        run: |
          ls;
          mv downloads/build modules/build;
          cd modules
          ls
          cd build
          ls 
          cd ../..
      - name: Terraform plan and apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd modules
          terraform init -lock=false
          terraform fmt
          terraform plan
          terraform apply -auto-approve -lock=false